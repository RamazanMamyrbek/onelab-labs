spring:
  application:
    name: course-service
  kafka:
    producer:
      bootstrap-servers: localhost:9092
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.springframework.kafka.support.serializer.JsonSerializer
    consumer:
      group-id: education-group
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: org.springframework.kafka.support.serializer.JsonDeserializer
      properties:
        spring.json.trusted.packages: '*'
  datasource:
    url: jdbc:h2:mem:testdb
    driver-class-name: org.h2.Driver
    username: sa
    password:
  jpa:
    database-platform: org.hibernate.dialect.H2Dialect
    hibernate:
      ddl-auto: update
    show-sql: true
  h2:
    console:
      enabled: true
      path: /h2-console
server:
  port: 8083

# Topics properties
kafka:
  topics:
    user:
      request:
        getAllStudents: user.request.getAllStudents
        getAllTeachers: user.request.getAllTeachers
        createStudent: user.request.createStudent
        createTeacher: user.request.createTeacher
        assignCourseToTeacher: user.request.assignCourseToTeacher
        assignCourseToStudent: user.request.assignCourseToStudent
        deleteTeacher: user.request.deleteTeacher
        deleteStudent: user.request.deleteStudent
        getStudentCourses: user.request.getStudentCourses

eureka:
  instance:
    prefer-ip-address: true
  client:
    fetch-registry: true
    register-with-eureka: true
    service-url:
      defaultZone: http://localhost:8070/eureka/