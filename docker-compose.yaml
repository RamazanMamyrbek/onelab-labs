version: '3'
services:
  # Zookeeper
  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    container_name: zookeeper-onelab
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    networks:
      - kafka-net

  # Kafka
  kafka:
    image: confluentinc/cp-kafka:latest
    container_name: kafka-onelab
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://localhost:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    networks:
      - kafka-net

  # PostgreSQL
  postgres:
    image: postgres:15
    container_name: postgres-onelab
    restart: always
    ports:
      - "5555:5432"
    environment:
      POSTGRES_DB: onelab-project
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: your_password
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - db-net

  # Elasticsearch
  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.5.3
    container_name: elasticsearch-onelab
    environment:
      - discovery.type=single-node
      - ELASTIC_PASSWORD=changeme
      - xpack.security.enabled=false
    ports:
      - "9200:9200"
      - "9300:9300"
    networks:
      - elastic-net

  # MinIO
  onelab-minio:
    image: minio/minio
    ports:
      - "9090:9090"
      - "9000:9000"
    volumes:
      - ~/minio/data:/data
    environment:
      - MINIO_ROOT_USER=minioadmin
      - MINIO_ROOT_PASSWORD=minioadmin
    command: server /data --console-address :9090
    networks:
      - storage-net

  create-buckets:
    image: minio/mc
    depends_on:
      - onelab-minio
    entrypoint: >
      /bin/sh -c "
      sleep 10;
      /usr/bin/mc alias set minio http://onelab-minio:9000 minioadmin minioadmin;
      /usr/bin/mc mb --ignore-existing minio/projectbucket;
      /usr/bin/mc anonymous set download minio/projectbucket;
      exit 0;
      "
    networks:
      - storage-net

networks:
  kafka-net:
  elastic-net:
  storage-net:
  db-net:

volumes:
  postgres_data:
