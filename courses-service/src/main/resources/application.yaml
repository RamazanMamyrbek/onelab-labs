spring:
  application:
    name: courses-service
  kafka:
    producer:
      bootstrap-servers: localhost:9092
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.springframework.kafka.support.serializer.JsonSerializer
    consumer:
      group-id: education-group
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: org.springframework.kafka.support.serializer.JsonDeserializer
      properties:
        spring.json.trusted.packages: '*'
  datasource:
    url: jdbc:postgresql://localhost:5555/onelab-project
    driver-class-name: org.postgresql.Driver
    username: postgres
    password: your_password
  jpa:
    database-platform: org.hibernate.dialect.PostgreSQLDialect
    hibernate:
      ddl-auto: update
    show-sql: true
  elasticsearch:
    uris: http://localhost:9200
    username: elastic
    password: changeme
  servlet:
    multipart:
      max-request-size: 200MB
      max-file-size: 200MB

server:
  port: 8082

kafka:
  topics:
    course:
      request:
        getAllCourses: course.request.getAllCourses
        getLessonsForCourse: course.request.getLessonsForCourse
        createCourse: course.request.createCourse
        addLessonToCourse: course.request.addLessonToCourse
        updateCourse: course.request.updateCourse
        updateLesson: course.request.updateLesson
        deleteCourse: course.request.deleteCourse
        deleteLesson: course.request.deleteLesson
        setTeacher: course.request.setTeacher
        getCourse: course.request.getCourse
        getCoursesByTeacher: course.request.getCoursesByTeacher
        findAllById: course.request.findAllById

eureka:
  instance:
    prefer-ip-address: true
  client:
    fetch-registry: true
    register-with-eureka: true
    service-url:
      defaultZone: http://localhost:8070/eureka/

minio:
  folders:
    lessonsFolder: lessons